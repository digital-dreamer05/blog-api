<!DOCTYPE html>
<html lang="fa" dir="rtl">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>🚀 Dev Mode Activated!</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Courier New', monospace;
        background: linear-gradient(45deg, #1e3c72, #2a5298, #000428, #004e92);
        background-size: 400% 400%;
        animation: gradientShift 15s ease infinite;
        color: #00ff41;
        overflow-x: hidden;
        min-height: 100vh;
      }

      @keyframes gradientShift {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }

      .matrix-bg {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
        opacity: 0.1;
      }

      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        position: relative;
        z-index: 1;
      }

      .header {
        text-align: center;
        margin-bottom: 50px;
        animation: glow 2s ease-in-out infinite alternate;
      }

      @keyframes glow {
        from {
          text-shadow: 0 0 20px #00ff41;
        }
        to {
          text-shadow: 0 0 30px #00ff41, 0 0 40px #00ff41;
        }
      }

      .title {
        font-size: 4rem;
        font-weight: bold;
        margin-bottom: 20px;
        background: linear-gradient(45deg, #00ff41, #39ff14, #32cd32);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.05);
        }
        100% {
          transform: scale(1);
        }
      }

      .subtitle {
        font-size: 1.5rem;
        color: #39ff14;
        margin-bottom: 10px;
      }

      .status {
        display: inline-block;
        padding: 10px 20px;
        background: rgba(0, 255, 65, 0.1);
        border: 2px solid #00ff41;
        border-radius: 25px;
        font-size: 1.2rem;
        animation: blink 1.5s infinite;
      }

      @keyframes blink {
        0%,
        50% {
          opacity: 1;
        }
        51%,
        100% {
          opacity: 0.5;
        }
      }

      .dashboard {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 30px;
        margin: 50px 0;
      }

      .card {
        background: rgba(0, 20, 40, 0.8);
        border: 2px solid #00ff41;
        border-radius: 15px;
        padding: 30px;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
        cursor: pointer;
      }

      .card:hover {
        transform: translateY(-10px);
        box-shadow: 0 20px 40px rgba(0, 255, 65, 0.3);
        border-color: #39ff14;
      }

      .card::before {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        background: linear-gradient(45deg, #00ff41, #39ff14, #32cd32, #00ff41);
        border-radius: 15px;
        opacity: 0;
        z-index: -1;
        animation: borderGlow 3s linear infinite;
      }

      .card:hover::before {
        opacity: 0.7;
      }

      @keyframes borderGlow {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }

      .card-icon {
        font-size: 3rem;
        margin-bottom: 15px;
      }

      .card-title {
        font-size: 1.5rem;
        margin-bottom: 10px;
        color: #39ff14;
      }

      .card-text {
        color: #b0b0b0;
        line-height: 1.6;
      }

      .terminal {
        background: rgba(0, 0, 0, 0.9);
        border: 2px solid #00ff41;
        border-radius: 10px;
        padding: 20px;
        margin: 40px 0;
        font-family: 'Courier New', monospace;
      }

      .terminal-header {
        display: flex;
        align-items: center;
        margin-bottom: 15px;
        padding-bottom: 10px;
        border-bottom: 1px solid #333;
      }

      .terminal-dots {
        display: flex;
        gap: 8px;
        margin-left: 10px;
      }

      .dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
      }

      .dot.red {
        background: #ff5f56;
      }
      .dot.yellow {
        background: #ffbd2e;
      }
      .dot.green {
        background: #27ca3f;
      }

      .terminal-title {
        margin-right: 15px;
        color: #b0b0b0;
      }

      .terminal-line {
        margin: 5px 0;
        animation: typewriter 3s steps(50) infinite;
      }

      .prompt {
        color: #00ff41;
      }

      .command {
        color: #39ff14;
      }

      .output {
        color: #b0b0b0;
      }

      @keyframes typewriter {
        from {
          width: 0;
        }
        to {
          width: 100%;
        }
      }

      .fun-stats {
        display: flex;
        justify-content: space-around;
        margin: 50px 0;
        flex-wrap: wrap;
        gap: 20px;
      }

      .stat {
        text-align: center;
        padding: 20px;
        background: rgba(0, 255, 65, 0.1);
        border-radius: 15px;
        min-width: 150px;
      }

      .stat-number {
        font-size: 2.5rem;
        font-weight: bold;
        color: #00ff41;
        display: block;
      }

      .stat-label {
        color: #b0b0b0;
        font-size: 1rem;
      }

      .floating-icons {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
      }

      .floating-icon {
        position: absolute;
        color: rgba(0, 255, 65, 0.3);
        animation: float 6s ease-in-out infinite;
        font-size: 2rem;
      }

      @keyframes float {
        0%,
        100% {
          transform: translateY(0) rotate(0deg);
        }
        33% {
          transform: translateY(-20px) rotate(120deg);
        }
        66% {
          transform: translateY(10px) rotate(240deg);
        }
      }

      @media (max-width: 768px) {
        .title {
          font-size: 2.5rem;
        }
        .subtitle {
          font-size: 1.2rem;
        }
        .dashboard {
          grid-template-columns: 1fr;
        }
        .fun-stats {
          flex-direction: column;
        }
      }
    </style>
  </head>
  <body>
    <div class="matrix-bg">
      <canvas id="matrix"></canvas>
    </div>

    <div class="floating-icons">
      <div
        class="floating-icon"
        style="top: 10%; left: 10%; animation-delay: 0s"
      >
        🚀
      </div>
      <div
        class="floating-icon"
        style="top: 20%; left: 80%; animation-delay: 1s"
      >
        💻
      </div>
      <div
        class="floating-icon"
        style="top: 60%; left: 15%; animation-delay: 2s"
      >
        ⚡
      </div>
      <div
        class="floating-icon"
        style="top: 70%; left: 85%; animation-delay: 3s"
      >
        🔥
      </div>
      <div
        class="floating-icon"
        style="top: 40%; left: 50%; animation-delay: 4s"
      >
        ⭐
      </div>
    </div>

    <div class="container">
      <header class="header">
        <h1 class="title">DEV MODE ACTIVATED</h1>
        <p class="subtitle">🎯 مرحله توسعه در حال انجام</p>
        <div class="status">
          <span>🟢 ONLINE</span> |
          <span id="current-time"></span>
        </div>
      </header>

      <div class="dashboard">
        <div class="card">
          <div class="card-icon">🚀</div>
          <h3 class="card-title">پروژه فعال</h3>
          <p class="card-text">
            سیستم در حال توسعه می‌باشد. تمامی قابلیت‌های جدید در مرحله تست و
            بهینه‌سازی هستند.
          </p>
        </div>

        <div class="card">
          <div class="card-icon">⚡</div>
          <h3 class="card-title">عملکرد سیستم</h3>
          <p class="card-text">
            تمامی سرویس‌ها فعال و آماده تست. سرعت پاسخ‌دهی بهینه و پایدار است.
          </p>
        </div>

        <div class="card">
          <div class="card-icon">🔧</div>
          <h3 class="card-title">ابزارهای توسعه</h3>
          <p class="card-text">
            محیط توسعه کامل با تمامی ابزارهای مورد نیاز برای کدنویسی و تست فراهم
            است.
          </p>
        </div>

        <div class="card">
          <div class="card-icon">📊</div>
          <h3 class="card-title">آمار و گزارش</h3>
          <p class="card-text">
            تمامی اطلاعات عملکرد و آمار پروژه به‌صورت لحظه‌ای در دسترس است.
          </p>
        </div>
      </div>

      <div class="terminal">
        <div class="terminal-header">
          <div class="terminal-dots">
            <div class="dot red"></div>
            <div class="dot yellow"></div>
            <div class="dot green"></div>
          </div>
          <div class="terminal-title">terminal - dev@localhost</div>
        </div>
        <div class="terminal-line">
          <span class="prompt">dev@localhost:~$</span>
          <span class="command">npm run dev</span>
        </div>
        <div class="terminal-line">
          <span class="output">🚀 Development server started...</span>
        </div>
        <div class="terminal-line">
          <span class="output">📦 Webpack compiled successfully</span>
        </div>
        <div class="terminal-line">
          <span class="output">🎯 Local: http://localhost:3000</span>
        </div>
        <div class="terminal-line">
          <span class="prompt">dev@localhost:~$</span>
          <span class="command">git status</span>
        </div>
        <div class="terminal-line">
          <span class="output">✨ Working directory clean</span>
        </div>
      </div>

      <div class="fun-stats">
        <div class="stat">
          <span class="stat-number" id="commits">42</span>
          <span class="stat-label">کامیت‌ها</span>
        </div>
        <div class="stat">
          <span class="stat-number" id="features">8</span>
          <span class="stat-label">فیچرهای جدید</span>
        </div>
        <div class="stat">
          <span class="stat-number" id="bugs">0</span>
          <span class="stat-label">باگ‌های باقی‌مانده</span>
        </div>
        <div class="stat">
          <span class="stat-number" id="coffee">∞</span>
          <span class="stat-label">فنجان قهوه</span>
        </div>
      </div>
    </div>

    <script>
      // Matrix rain effect
      const canvas = document.getElementById('matrix');
      const ctx = canvas.getContext('2d');

      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;

      const matrix = 'ابپتثجچحخدذرزژسشصضطظعغفقکگلمنوهی01';
      const matrixArray = matrix.split('');

      const fontSize = 16;
      const columns = canvas.width / fontSize;

      const drops = [];
      for (let x = 0; x < columns; x++) {
        drops[x] = 1;
      }

      function drawMatrix() {
        ctx.fillStyle = 'rgba(0, 0, 0, 0.04)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);

        ctx.fillStyle = '#0F3';
        ctx.font = fontSize + 'px monospace';

        for (let i = 0; i < drops.length; i++) {
          const text =
            matrixArray[Math.floor(Math.random() * matrixArray.length)];
          ctx.fillText(text, i * fontSize, drops[i] * fontSize);

          if (drops[i] * fontSize > canvas.height && Math.random() > 0.975) {
            drops[i] = 0;
          }
          drops[i]++;
        }
      }

      setInterval(drawMatrix, 100);

      // Update time
      function updateTime() {
        const now = new Date();
        const timeString = now.toLocaleTimeString('fa-IR', {
          hour: '2-digit',
          minute: '2-digit',
          second: '2-digit',
        });
        document.getElementById('current-time').textContent = timeString;
      }

      updateTime();
      setInterval(updateTime, 1000);

      // Animate stats
      function animateStats() {
        const commits = document.getElementById('commits');
        const features = document.getElementById('features');
        const bugs = document.getElementById('bugs');

        setInterval(() => {
          commits.textContent = Math.floor(Math.random() * 100) + 20;
        }, 5000);

        setInterval(() => {
          features.textContent = Math.floor(Math.random() * 15) + 5;
        }, 7000);

        setInterval(() => {
          bugs.textContent = Math.floor(Math.random() * 3);
        }, 3000);
      }

      animateStats();

      // Resize canvas on window resize
      window.addEventListener('resize', () => {
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
      });

      // Add click effects to cards
      document.querySelectorAll('.card').forEach((card) => {
        card.addEventListener('click', () => {
          card.style.transform = 'scale(0.95)';
          setTimeout(() => {
            card.style.transform = 'translateY(-10px)';
          }, 150);
        });
      });

      // Console easter egg
      console.log(`
    ╔══════════════════════════════════════╗
    ║           DEV MODE ACTIVE            ║
    ║                                      ║
    ║  🚀 Welcome to the development zone! ║
    ║  💻 Happy coding!                    ║
    ║  ⚡ May your code be bug-free!       ║
    ╚══════════════════════════════════════╝
        `);
    </script>
  </body>
</html>
