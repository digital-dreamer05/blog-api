<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>My Blog</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }
      body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f5f5f5;
        color: #333;
        line-height: 1.6;
      }
      .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }
      header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 30px 0;
        margin-bottom: 40px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
      }
      header .container {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      header h1 {
        font-size: 2.5em;
        color: white;
        font-weight: 700;
      }
      .nav-buttons {
        display: flex;
        gap: 15px;
        align-items: center;
      }
      .nav-btn {
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        text-decoration: none;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 0.9em;
        display: inline-block;
      }
      .btn-login {
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
        border: 2px solid white;
        backdrop-filter: blur(10px);
      }
      .btn-login:hover {
        background-color: white;
        color: #667eea;
      }
      .btn-signup {
        background-color: white;
        color: #667eea;
      }
      .btn-signup:hover {
        background-color: rgba(255, 255, 255, 0.9);
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      }
      .btn-create {
        background-color: rgba(255, 255, 255, 0.95);
        color: #27ae60;
        font-weight: 700;
      }
      .btn-create:hover {
        background-color: white;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      }
      .btn-logout {
        background-color: rgba(231, 76, 60, 0.9);
        color: white;
        border: none;
      }
      .btn-logout:hover {
        background-color: #c0392b;
        transform: translateY(-2px);
      }
      .user-profile {
        display: flex;
        align-items: center;
        gap: 15px;
        background: rgba(255, 255, 255, 0.15);
        padding: 10px 20px;
        border-radius: 50px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.3);
        transition: all 0.3s ease;
      }
      .user-profile:hover {
        background: rgba(255, 255, 255, 0.25);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transform: translateY(-2px);
      }
      .user-avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 700;
        font-size: 1.2em;
        border: 3px solid white;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
      }
      .user-details {
        display: flex;
        flex-direction: column;
        gap: 2px;
      }
      .user-name {
        color: white;
        font-weight: 700;
        font-size: 1em;
        text-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
      }
      .user-role {
        color: rgba(255, 255, 255, 0.8);
        font-size: 0.75em;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-weight: 600;
      }
      .articles-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 30px;
        margin-bottom: 40px;
      }
      .article-card {
        background: #fff;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        text-decoration: none;
        color: inherit;
        display: block;
      }
      .article-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
      }
      .article-image {
        width: 100%;
        height: 220px;
        object-fit: cover;
      }
      .article-content {
        padding: 25px;
      }
      .article-title {
        font-size: 1.5em;
        font-weight: bold;
        margin-bottom: 15px;
        color: #2c3e50;
      }
      .article-excerpt {
        color: #666;
        margin-bottom: 20px;
        line-height: 1.7;
        font-size: 0.95em;
      }
      .article-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: 15px;
        border-top: 1px solid #eee;
        font-size: 0.85em;
        color: #999;
      }
      .article-author {
        font-weight: 600;
        color: #555;
      }
      .article-date {
        color: #999;
      }
      .article-tags {
        margin-top: 15px;
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
      }
      .tag {
        background-color: #e8f4f8;
        color: #3498db;
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.8em;
        font-weight: 500;
      }
      .no-articles {
        text-align: center;
        padding: 60px 20px;
        color: #999;
        font-size: 1.2em;
      }
      .logged-in-actions {
        display: flex;
        gap: 12px;
        align-items: center;
      }
      @media (max-width: 768px) {
        .articles-grid {
          grid-template-columns: 1fr;
        }
        header h1 {
          font-size: 2em;
        }
        header .container {
          flex-direction: column;
          gap: 20px;
        }
        .nav-buttons {
          width: 100%;
          justify-content: center;
        }
        .user-profile {
          flex-direction: column;
          text-align: center;
        }
        .logged-in-actions {
          flex-direction: column;
          width: 100%;
        }
        .logged-in-actions .nav-btn {
          width: 100%;
        }
      }
      .skeleton-loader {
        animation: pulse 1.5s ease-in-out infinite;
      }
      @keyframes pulse {
        0%,
        100% {
          opacity: 1;
        }
        50% {
          opacity: 0.5;
        }
      }
    </style>
  </head>
  <body>
    <header>
      <div class="container">
        <h1>My Blog</h1>
        <div class="nav-buttons" id="navButtons">
          <div
            class="skeleton-loader"
            style="
              width: 200px;
              height: 40px;
              background: rgba(255, 255, 255, 0.2);
              border-radius: 8px;
            "
          ></div>
        </div>
      </div>
    </header>

    <div class="container">
      <% if (articles && articles.length > 0) { %>
      <div class="articles-grid">
        <% articles.forEach(article => { %>
        <a href="/article/<%= article.slug %>" class="article-card">
          <img
            src="<%= article.cover || '/images/default-cover.jpg' %>"
            alt="<%= article.title %>"
            class="article-image"
          />
          <div class="article-content">
            <h2 class="article-title"><%= article.title %></h2>
            <p class="article-excerpt">
              <%= article.excerpt || article.content.substring(0, 150) + '...'
              %>
            </p>

            <% if (article.tags && article.tags.length > 0) { %>
            <div class="article-tags">
              <% article.tags.forEach(tag => { %>
              <span class="tag"><%= tag %></span>
              <% }) %>
            </div>
            <% } %>

            <div class="article-meta">
              <span class="article-author">By <%= article.author %></span>

              <% if (article.days_since <= 30) { %>
              <span class="article-date" title="<%= article.full_date %>">
                <%= article.relative_time %>
              </span>
              <% } else { %>
              <span class="article-date"><%= article.full_date %></span>
              <% } %>
            </div>
          </div>
        </a>
        <% }) %>
      </div>
      <% } else { %>
      <div class="no-articles">
        <p>No articles published yet.</p>
      </div>
      <% } %>
    </div>

    <script>
      const accessToken = localStorage.getItem('accessToken');
      const navButtons = document.getElementById('navButtons');

      async function fetchUserInfo() {
        try {
          const response = await fetch('/auth/me', {
            headers: { Authorization: `Bearer ${accessToken}` },
          });
          if (response.ok) return await response.json();
          return null;
        } catch (error) {
          console.error('Error fetching user info:', error);
          return null;
        }
      }

      function getInitials(name) {
        if (!name) return '?';
        const parts = name.trim().split(' ');
        if (parts.length === 1) return parts[0].charAt(0).toUpperCase();
        return (
          parts[0].charAt(0) + parts[parts.length - 1].charAt(0)
        ).toUpperCase();
      }

      function getRoleBadge(role) {
        const roles = {
          admin: 'Admin',
          author: 'Author',
          user: 'Member',
          editor: 'Editor',
          moderator: 'Moderator',
        };
        return roles[role?.toLowerCase()] || 'Member';
      }

      async function renderNavButtons() {
        if (accessToken) {
          const user = await fetchUserInfo();
          if (user) {
            const initials = getInitials(user.name || user.username);
            const displayName = user.name || user.username;
            const roleBadge = getRoleBadge(user.role);
            navButtons.innerHTML = `
              <a href="/dashboard" class="user-profile" style="text-decoration: none; color: inherit;">
                <div class="user-avatar">${initials}</div>
                <div class="user-details">
                  <div class="user-name">${displayName}</div>
                  <div class="user-role">${roleBadge}</div>
                </div>
              </a>
              <div class="logged-in-actions">
                <a href="/create" class="nav-btn btn-create">+ Create Article</a>
                <button onclick="logout()" class="nav-btn btn-logout">Logout</button>
              </div>
            `;
          } else {
            localStorage.removeItem('accessToken');
            localStorage.removeItem('refreshToken');
            renderGuestButtons();
          }
        } else {
          renderGuestButtons();
        }
      }

      function renderGuestButtons() {
        navButtons.innerHTML = `
          <a href="/login" class="nav-btn btn-login">Login</a>
          <a href="/register" class="nav-btn btn-signup">Sign Up</a>
        `;
      }

      async function logout() {
        try {
          await fetch('/auth/logout', {
            method: 'POST',
            headers: {
              Authorization: `Bearer ${localStorage.getItem('accessToken')}`,
            },
          });
        } catch (error) {
          console.error('Logout error:', error);
        } finally {
          localStorage.removeItem('accessToken');
          localStorage.removeItem('refreshToken');
          window.location.href = '/';
        }
      }

      renderNavButtons();
    </script>
  </body>
</html>
