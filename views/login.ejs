<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Welcome Back - Login</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
      rel="stylesheet"
    />
    <style>
      @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        background: #0f0f23;
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 20px;
        overflow: hidden;
      }

      /* Animated background */
      .bg-animation {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        opacity: 0.1;
      }

      .floating-shapes {
        position: absolute;
        width: 100%;
        height: 100%;
      }

      .shape {
        position: absolute;
        background: linear-gradient(45deg, #667eea, #764ba2, #f093fb, #f5576c);
        border-radius: 50%;
        animation: float 20s infinite linear;
      }

      .shape:nth-child(1) {
        width: 80px;
        height: 80px;
        top: 20%;
        left: 10%;
        animation-delay: 0s;
      }

      .shape:nth-child(2) {
        width: 120px;
        height: 120px;
        top: 60%;
        right: 10%;
        animation-delay: -5s;
      }

      .shape:nth-child(3) {
        width: 60px;
        height: 60px;
        bottom: 20%;
        left: 20%;
        animation-delay: -10s;
      }

      .shape:nth-child(4) {
        width: 100px;
        height: 100px;
        top: 10%;
        right: 30%;
        animation-delay: -15s;
      }

      @keyframes float {
        0%,
        100% {
          transform: translateY(0px) rotate(0deg);
        }
        33% {
          transform: translateY(-30px) rotate(120deg);
        }
        66% {
          transform: translateY(20px) rotate(240deg);
        }
      }

      .login-container {
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 24px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
        padding: 50px;
        width: 100%;
        max-width: 480px;
        position: relative;
        animation: slideUp 0.8s ease-out;
        z-index: 1;
      }

      @keyframes slideUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .login-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 1px;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 255, 255, 0.4),
          transparent
        );
        animation: shimmer 3s infinite;
      }

      @keyframes shimmer {
        0% {
          transform: translateX(-100%);
        }
        100% {
          transform: translateX(100%);
        }
      }

      .login-header {
        text-align: center;
        margin-bottom: 40px;
        position: relative;
      }

      .login-header .logo {
        width: 80px;
        height: 80px;
        margin: 0 auto 20px;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 20px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 32px;
        color: white;
        animation: logoGlow 2s ease-in-out infinite alternate;
        box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
      }

      @keyframes logoGlow {
        from {
          box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        }
        to {
          box-shadow: 0 15px 40px rgba(102, 126, 234, 0.5),
            0 0 20px rgba(102, 126, 234, 0.2);
        }
      }

      .login-header h2 {
        color: #ffffff;
        font-size: 32px;
        font-weight: 700;
        margin-bottom: 8px;
        background: linear-gradient(135deg, #ffffff 0%, #f0f0f0 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      .login-header p {
        color: rgba(255, 255, 255, 0.7);
        font-size: 16px;
        font-weight: 400;
      }

      .form-group {
        position: relative;
        margin-bottom: 30px;
      }

      .form-group label {
        display: block;
        margin-bottom: 12px;
        color: rgba(255, 255, 255, 0.9);
        font-weight: 500;
        font-size: 14px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
      }

      .input-wrapper {
        position: relative;
        overflow: hidden;
      }

      .form-group input {
        width: 100%;
        padding: 18px 24px 18px 60px;
        border: 2px solid rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        font-size: 16px;
        background: rgba(255, 255, 255, 0.05);
        color: #ffffff;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        backdrop-filter: blur(10px);
      }

      .form-group input::placeholder {
        color: rgba(255, 255, 255, 0.5);
      }

      .form-group input:focus {
        outline: none;
        border-color: #667eea;
        background: rgba(255, 255, 255, 0.08);
        box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1),
          0 8px 25px rgba(0, 0, 0, 0.1);
        transform: translateY(-2px);
      }

      .input-icon {
        position: absolute;
        left: 20px;
        top: 50%;
        transform: translateY(-50%);
        color: rgba(255, 255, 255, 0.5);
        font-size: 18px;
        transition: all 0.3s ease;
        z-index: 2;
      }

      .form-group input:focus + .input-icon {
        color: #667eea;
        transform: translateY(-50%) scale(1.1);
      }

      .input-wrapper::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 255, 255, 0.1),
          transparent
        );
        transition: left 0.5s;
      }

      .form-group input:focus ~ .input-wrapper::before {
        left: 100%;
      }

      .captcha-container {
        display: flex;
        gap: 20px;
        align-items: flex-start;
        margin-bottom: 30px;
      }

      .captcha-display {
        border: 2px solid rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        padding: 15px;
        background: rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        min-width: 150px;
        min-height: 80px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
        transition: all 0.3s ease;
      }

      .captcha-display:hover {
        border-color: rgba(255, 255, 255, 0.2);
        background: rgba(255, 255, 255, 0.08);
      }

      .captcha-display svg {
        max-width: 100%;
        height: auto;
        filter: drop-shadow(0 2px 8px rgba(0, 0, 0, 0.3));
      }

      .captcha-loading {
        color: rgba(255, 255, 255, 0.6);
        font-size: 14px;
        animation: pulse 1.5s infinite;
      }

      @keyframes pulse {
        0%,
        100% {
          opacity: 0.6;
        }
        50% {
          opacity: 1;
        }
      }

      .captcha-input-group {
        flex: 1;
        display: flex;
        flex-direction: column;
        gap: 15px;
      }

      .captcha-input {
        padding: 18px 24px;
        border: 2px solid rgba(255, 255, 255, 0.1);
        border-radius: 16px;
        font-size: 16px;
        background: rgba(255, 255, 255, 0.05);
        color: #ffffff;
        transition: all 0.4s ease;
        backdrop-filter: blur(10px);
      }

      .captcha-input::placeholder {
        color: rgba(255, 255, 255, 0.5);
      }

      .captcha-input:focus {
        outline: none;
        border-color: #667eea;
        background: rgba(255, 255, 255, 0.08);
        box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
        transform: translateY(-2px);
      }

      .refresh-captcha {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        border-radius: 16px;
        padding: 18px 24px;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        font-size: 14px;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
      }

      .refresh-captcha::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 255, 255, 0.2),
          transparent
        );
        transition: left 0.5s;
      }

      .refresh-captcha:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 35px rgba(102, 126, 234, 0.3);
      }

      .refresh-captcha:hover::before {
        left: 100%;
      }

      .refresh-captcha:active {
        transform: translateY(-1px);
      }

      .refresh-captcha:disabled {
        background: rgba(255, 255, 255, 0.1);
        cursor: not-allowed;
        transform: none;
      }

      .login-btn {
        width: 100%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border: none;
        padding: 20px;
        border-radius: 16px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 30px;
      }

      .login-btn::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(
          90deg,
          transparent,
          rgba(255, 255, 255, 0.2),
          transparent
        );
        transition: left 0.5s;
      }

      .login-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 20px 40px rgba(102, 126, 234, 0.4);
      }

      .login-btn:hover::before {
        left: 100%;
      }

      .login-btn:active {
        transform: translateY(-1px);
      }

      .login-btn:disabled {
        background: rgba(255, 255, 255, 0.1);
        cursor: not-allowed;
        transform: none;
      }

      .error-message {
        background: rgba(244, 63, 94, 0.1);
        border: 1px solid rgba(244, 63, 94, 0.3);
        color: #fca5a5;
        padding: 16px 20px;
        border-radius: 12px;
        margin-bottom: 25px;
        font-size: 14px;
        text-align: center;
        animation: fadeIn 0.5s ease, shake 0.6s ease;
        backdrop-filter: blur(10px);
      }

      .success-message {
        background: rgba(34, 197, 94, 0.1);
        border: 1px solid rgba(34, 197, 94, 0.3);
        color: #86efac;
        padding: 16px 20px;
        border-radius: 12px;
        margin-bottom: 25px;
        font-size: 14px;
        text-align: center;
        animation: fadeIn 0.5s ease;
        backdrop-filter: blur(10px);
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(-10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes shake {
        0%,
        100% {
          transform: translateX(0);
        }
        10%,
        30%,
        50%,
        70%,
        90% {
          transform: translateX(-5px);
        }
        20%,
        40%,
        60%,
        80% {
          transform: translateX(5px);
        }
      }

      .forgot-password {
        text-align: center;
      }

      .forgot-password a {
        color: rgba(255, 255, 255, 0.7);
        text-decoration: none;
        font-size: 14px;
        transition: all 0.3s ease;
        position: relative;
      }

      .forgot-password a::after {
        content: '';
        position: absolute;
        width: 0;
        height: 2px;
        bottom: -2px;
        left: 50%;
        background: linear-gradient(90deg, #667eea, #764ba2);
        transition: all 0.3s ease;
        transform: translateX(-50%);
      }

      .forgot-password a:hover {
        color: #ffffff;
      }

      .forgot-password a:hover::after {
        width: 100%;
      }

      /* Loading animations */
      .loading {
        position: relative;
      }

      .loading::after {
        content: '';
        position: absolute;
        top: 50%;
        right: 24px;
        transform: translateY(-50%);
        width: 20px;
        height: 20px;
        border: 2px solid rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        border-top-color: white;
        animation: spin 1s linear infinite;
      }

      @keyframes spin {
        to {
          transform: translateY(-50%) rotate(360deg);
        }
      }

      .refresh-captcha.loading::after {
        right: 50%;
        transform: translate(50%, -50%);
      }

      /* Responsive design */
      @media (max-width: 768px) {
        body {
          padding: 15px;
        }

        .login-container {
          padding: 35px 25px;
          border-radius: 20px;
        }

        .login-header h2 {
          font-size: 28px;
        }

        .captcha-container {
          flex-direction: column;
          align-items: stretch;
        }

        .captcha-display {
          align-self: center;
          width: 180px;
        }
      }

      @media (max-width: 480px) {
        .login-container {
          padding: 25px 20px;
        }

        .login-header .logo {
          width: 60px;
          height: 60px;
          font-size: 24px;
        }

        .login-header h2 {
          font-size: 24px;
        }
      }

      /* Focus states for accessibility */
      .refresh-captcha:focus,
      .login-btn:focus {
        outline: 2px solid #667eea;
        outline-offset: 2px;
      }

      .form-group input:focus {
        outline: none; /* Custom focus styles already applied */
      }

      /* Custom scrollbar */
      ::-webkit-scrollbar {
        width: 6px;
      }

      ::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.1);
      }

      ::-webkit-scrollbar-thumb {
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 3px;
      }
    </style>
  </head>
  <body>
    <!-- Animated Background -->
    <div class="bg-animation">
      <div class="floating-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
      </div>
    </div>

    <div class="login-container">
      <div class="login-header">
        <div class="logo">
          <i class="fas fa-rocket"></i>
        </div>
        <h2>Welcome Back</h2>
        <p>Please sign in to your account</p>
      </div>

      <!-- Error Message -->
      <% if (typeof error !== 'undefined' && error) { %>
      <div class="error-message">
        <i class="fas fa-exclamation-triangle"></i> <%= error %>
      </div>
      <% } %>

      <!-- Success Message -->
      <% if (typeof success !== 'undefined' && success) { %>
      <div class="success-message">
        <i class="fas fa-check-circle"></i> <%= success %>
      </div>
      <% } %>

      <form action="/auth/login" method="POST" id="loginForm">
        <!-- Username Field -->
        <div class="form-group">
          <label for="username"> <i class="fas fa-user"></i> Username </label>
          <div class="input-wrapper">
            <input
              type="text"
              id="username"
              name="username"
              placeholder="Enter your username"
              value="<%= typeof username !== 'undefined' ? username : '' %>"
              required
              autocomplete="username"
            />
            <i class="fas fa-user input-icon"></i>
          </div>
        </div>

        <!-- Password Field -->
        <div class="form-group">
          <label for="password"> <i class="fas fa-lock"></i> Password </label>
          <div class="input-wrapper">
            <input
              type="password"
              id="password"
              name="password"
              placeholder="Enter your password"
              required
              autocomplete="current-password"
            />
            <i class="fas fa-lock input-icon"></i>
          </div>
        </div>

        <!-- Captcha Section -->
        <div class="form-group">
          <label> <i class="fas fa-shield-alt"></i> Security Code </label>
          <div class="captcha-container">
            <div class="captcha-display" id="captchaDisplay">
              <div class="captcha-loading">Loading...</div>
            </div>
            <div class="captcha-input-group">
              <input
                type="text"
                name="captcha"
                class="captcha-input"
                placeholder="Enter security code"
                required
                autocomplete="off"
                id="captchaInput"
              />
              <button
                type="button"
                class="refresh-captcha"
                onclick="refreshCaptcha()"
                id="refreshBtn"
              >
                <i class="fas fa-sync-alt"></i> Refresh
              </button>
            </div>
          </div>
        </div>

        <!-- Hidden field for captcha UUID -->
        <input type="hidden" name="captchaUuid" id="captchaUuid" value="" />

        <!-- Login Button -->
        <button type="submit" class="login-btn" id="loginButton">
          <i class="fas fa-sign-in-alt"></i> Sign In
        </button>
      </form>

      <div class="forgot-password">
        <a href="/forgot-password">
          <i class="fas fa-key"></i> Forgot your password?
        </a>
      </div>
    </div>

    <script>
      let currentCaptchaUuid = null;

      // Refresh captcha function
      async function refreshCaptcha() {
        const refreshBtn = document.getElementById('refreshBtn');
        const captchaDisplay = document.getElementById('captchaDisplay');
        const captchaUuidInput = document.getElementById('captchaUuid');
        const captchaInput = document.getElementById('captchaInput');

        try {
          refreshBtn.disabled = true;
          refreshBtn.classList.add('loading');
          refreshBtn.innerHTML =
            '<i class="fas fa-sync-alt fa-spin"></i> Loading...';

          captchaDisplay.innerHTML =
            '<div class="captcha-loading">Loading...</div>';

          const response = await fetch('/captcha', {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
            },
          });

          if (response.ok) {
            const data = await response.json();
            currentCaptchaUuid = data.uuid;

            // Display SVG captcha
            captchaDisplay.innerHTML = data.captcha;
            captchaUuidInput.value = data.uuid;
            captchaInput.value = '';
            captchaInput.focus();
          } else {
            throw new Error('Failed to load captcha');
          }
        } catch (error) {
          console.error('Captcha request error:', error);
          captchaDisplay.innerHTML =
            '<div class="captcha-loading" style="color: #fca5a5;">Failed to load captcha</div>';
          showError('Failed to load captcha. Please try again.');
        } finally {
          refreshBtn.disabled = false;
          refreshBtn.classList.remove('loading');
          refreshBtn.innerHTML = '<i class="fas fa-sync-alt"></i> Refresh';
        }
      }

      // Show error message
      function showError(message) {
        const existingError = document.querySelector('.error-message');
        if (existingError) {
          existingError.remove();
        }

        const errorDiv = document.createElement('div');
        errorDiv.className = 'error-message';
        errorDiv.innerHTML = `<i class="fas fa-exclamation-triangle"></i> ${message}`;

        const form = document.getElementById('loginForm');
        form.parentNode.insertBefore(errorDiv, form);

        setTimeout(() => {
          if (errorDiv.parentNode) {
            errorDiv.remove();
          }
        }, 5000);
      }

      // Form submission handler
      document
        .getElementById('loginForm')
        .addEventListener('submit', function (e) {
          const button = document.getElementById('loginButton');
          const captchaUuid = document.getElementById('captchaUuid').value;

          if (!captchaUuid) {
            e.preventDefault();
            showError('Please load the captcha first');
            return;
          }

          button.classList.add('loading');
          button.disabled = true;
          button.innerHTML =
            '<i class="fas fa-spinner fa-spin"></i> Signing In...';

          // Reset button state after timeout (in case of error)
          setTimeout(() => {
            if (button.classList.contains('loading')) {
              button.classList.remove('loading');
              button.disabled = false;
              button.innerHTML = '<i class="fas fa-sign-in-alt"></i> Sign In';
            }
          }, 10000);
        });

      // Real-time validation
      document
        .querySelectorAll('input[type="text"], input[type="password"]')
        .forEach((input) => {
          input.addEventListener('input', function () {
            if (this.value.trim() !== '') {
              this.style.borderColor = 'rgba(34, 197, 94, 0.5)';
              this.style.boxShadow = '0 0 0 4px rgba(34, 197, 94, 0.1)';
            } else {
              this.style.borderColor = 'rgba(255, 255, 255, 0.1)';
              this.style.boxShadow = 'none';
            }
          });

          input.addEventListener('blur', function () {
            if (this.value.trim() === '') {
              this.style.borderColor = 'rgba(255, 255, 255, 0.1)';
              this.style.boxShadow = 'none';
            }
          });
        });

      // Initial captcha load and focus management
      window.addEventListener('load', function () {
        refreshCaptcha();

        // Auto-focus on first empty field
        const firstEmptyInput = document.querySelector(
          'input[value=""], input:not([value])'
        );
        if (firstEmptyInput && firstEmptyInput.type !== 'hidden') {
          setTimeout(() => {
            firstEmptyInput.focus();
          }, 500);
        }
      });

      // Refresh captcha with Ctrl+Enter on captcha input
      document
        .getElementById('captchaInput')
        .addEventListener('keypress', function (e) {
          if (e.key === 'Enter' && e.ctrlKey) {
            e.preventDefault();
            refreshCaptcha();
          }
        });

      // Add subtle hover effects to form elements
      document.querySelectorAll('.form-group input').forEach((input) => {
        input.addEventListener('mouseenter', function () {
          if (!this.matches(':focus')) {
            this.style.borderColor = 'rgba(255, 255, 255, 0.2)';
          }
        });

        input.addEventListener('mouseleave', function () {
          if (!this.matches(':focus') && this.value.trim() === '') {
            this.style.borderColor = 'rgba(255, 255, 255, 0.1)';
          }
        });
      });

      // Keyboard navigation improvements
      document.addEventListener('keydown', function (e) {
        if (e.key === 'Tab') {
          document.body.classList.add('keyboard-navigation');
        }
      });

      document.addEventListener('mousedown', function () {
        document.body.classList.remove('keyboard-navigation');
      });
    </script>
  </body>
</html>
